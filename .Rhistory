for(f in rfiles){
# print(f)
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T)
if(length(y) > 0) {
print(gsub(pattern = file.pattern, "",  (basename(f))))
for(i in y) print(i)
}
w = w + 1
}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T, file.pattern = "\\.md$"){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern, repl, x, fixed = T)
cat(y, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
attern = "- Marcelo Araya-Salas"
repl = "- admin"
path = "./content/publication"
file.pattern = "\\.md$"
ignore.case = T
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
rfiles
f <- rfiles[1]
f
#find and replace
x <- readLines(f)
x
y <- gsub(pattern, repl, x, fixed = T)
pattern = "- Marcelo Araya-salas"
#find and replace
x <- readLines(f)
y <- gsub(pattern, repl, x, fixed = T)
y
pattern
repl
x
gsub(pattern, repl, x, fixed = T)
pattern
repl
x
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
y
pattern
pattern = "- Marcelo Araya-Salas"
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
y
#find text in functions
find.text <- function(pattern, fun.only = FALSE, path = "./R", ignore.case = T, file.pattern = "\\.md$")
{
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
#check where a word is found in each function an return the name of function where it was found and the time
res <- NULL
w <- 1
for(f in rfiles){
# print(f)
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T)
if(length(y) > 0) {
print(gsub(pattern = file.pattern, "",  (basename(f))))
for(i in y) print(i)
}
w = w + 1
}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T, file.pattern = "\\.md$"){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
cat(y, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
#find text in functions
find.text <- function(pattern, fun.only = FALSE, path = "./R", ignore.case = T, file.pattern = "\\.md$")
{
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
#check where a word is found in each function an return the name of function where it was found and the time
res <- NULL
w <- 1
for(f in rfiles){
# print(f)
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T)
if(length(y) > 0) {
print(gsub(pattern = file.pattern, "",  (basename(f))))
for(i in y) print(i)
}
w = w + 1
}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T, file.pattern = "\\.md$"){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
cat(y, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
rfiles
#find and replace
x <- readLines(f)
x
#find text in functions
find.text <- function(pattern, fun.only = FALSE, path = "./R", ignore.case = T, file.pattern = "\\.md$")
{
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
#check where a word is found in each function an return the name of function where it was found and the time
res <- NULL
w <- 1
for(f in rfiles){
# print(f)
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T)
if(length(y) > 0) {
print(gsub(pattern = file.pattern, "",  (basename(f))))
for(i in y) print(i)
}
w = w + 1
}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T, file.pattern = "\\.md$"){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
cat(y, file = f, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::serve_site()
# Chunk 1
#find text in functions
find.text <- function(pattern, fun.only = FALSE, path = "./R", ignore.case = T, file.pattern = "\\.md$")
{
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
#check where a word is found in each function an return the name of function where it was found and the time
res <- NULL
w <- 1
for(f in rfiles){
# print(f)
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T)
if(length(y) > 0) {
print(gsub(pattern = file.pattern, "",  (basename(f))))
for(i in y) print(i)
}
w = w + 1
}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T, file.pattern = "\\.md$"){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
cat(y, file = f, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::serve_site()
blogdown::stop_server()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
.
# Chunk 1
#find text in functions
find.text <- function(pattern, fun.only = FALSE, path = "./R", ignore.case = T, file.pattern = "\\.md$")
{
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
#check where a word is found in each function an return the name of function where it was found and the time
res <- NULL
w <- 1
for(f in rfiles){
# print(f)
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T)
if(length(y) > 0) {
print(gsub(pattern = file.pattern, "",  (basename(f))))
for(i in y) print(i)
}
w = w + 1
}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T, file.pattern = "\\.md$"){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
cat(y, file = f, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
blogdown::stop_server()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
.rs.restartR()
# delete folders
# dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
# for (i in dirs)
# unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::serve_site()
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
.rs.restartR()
Sys.sleep(3)
blogdown::stop_server()
# .rs.restartR()
# Sys.sleep(3)
# delete folders
# dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
# for (i in dirs)
# unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
# .rs.restartR()
# Sys.sleep(3)
# delete folders
# dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
# for (i in dirs)
# unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
path = "./content/publication"
file.pattern = "\\.md$"
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
rfiles
f <- rfiles[1]
f
#find and replace
x <- readLines(f)
x
grepl("url_pdf", x)
any(grepl("url_pdf", x))
x
x[-length(x)]
y <- x[-length(x)]
y
x[!grepl("^doi:", x)]
x <- x[!grepl("^doi:", x)]
y <- x[-length(x)]
y
f
basename(dirname(f))
y <- c(y, paste0("url_pdf: ", basename(dirname(f)), ".pdf"), x[length(x)])
y
url_pdf
url_pdf <- paste0("url_pdf: ", basename(dirname(f)), ".pdf")
url_pdf
add.pdf <- function(path = "./content/publication", file.pattern = "\\.md$", rm.doi = TRUE){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
results <- NULL
for(f in rfiles){
#find and replace
x <- readLines(f)
if (rm.doi)
x <- x[!grepl("^doi:", x)]
if (!any(grepl("^url_pdf", x))){
url_pdf <- paste0("url_pdf: ", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
}
}
}
add.pdf <- function(path = "./content/publication", file.pattern = "\\.md$", rm.doi = TRUE){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
results <- NULL
for(f in rfiles){
#find and replace
x <- readLines(f)
if (rm.doi)
x <- x[!grepl("^doi:", x)]
if (!any(grepl("^url_pdf", x))){
url_pdf <- paste0("url_pdf: ", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
}
}
print(results)
}
y
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
results <- NULL
results[length(results) + 1] <- url_pdf
results
blogdown::serve_site()
x[length(x)]
url_pdf <- paste0("url_pdf: uploads/", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
y
add.pdf <- function(path = "./content/publication", file.pattern = "\\.md$", rm.doi = TRUE){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
results <- NULL
for(f in rfiles){
#find and replace
x <- readLines(f)
if (rm.doi)
x <- x[!grepl("^doi:", x)]
if (!any(grepl("^url_pdf", x))){
url_pdf <- paste0("url_pdf: uploads/", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
}
}
print(results)
}
add.pdf()
blogdown::stop_server()
