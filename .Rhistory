repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::serve_site()
blogdown::stop_server()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
.
# Chunk 1
#find text in functions
find.text <- function(pattern, fun.only = FALSE, path = "./R", ignore.case = T, file.pattern = "\\.md$")
{
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
#check where a word is found in each function an return the name of function where it was found and the time
res <- NULL
w <- 1
for(f in rfiles){
# print(f)
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T)
if(length(y) > 0) {
print(gsub(pattern = file.pattern, "",  (basename(f))))
for(i in y) print(i)
}
w = w + 1
}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T, file.pattern = "\\.md$"){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern = pattern, replacement = repl, x = x, fixed = T)
cat(y, file = f, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
blogdown::stop_server()
# delete folders
dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
for (i in dirs)
unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
.rs.restartR()
# delete folders
# dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
# for (i in dirs)
# unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::serve_site()
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
.rs.restartR()
Sys.sleep(3)
blogdown::stop_server()
# .rs.restartR()
# Sys.sleep(3)
# delete folders
# dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
# for (i in dirs)
# unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
# .rs.restartR()
# Sys.sleep(3)
# delete folders
# dirs <- list.dirs("./content/publication", full.names = TRUE)[-1]
# for (i in dirs)
# unlink(i, recursive = TRUE)
# run on terminal
system("academic import --bibtex export.bib --overwrite")
# find.text(pattern = "- Marcelo Araya-Salas",  ignore.case = T, path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- M. Araya-Salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
repl.text(pattern = "- Marcelo Araya-salas", repl = "- admin", path = "./content/publication", file.pattern = "\\.md$")
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
path = "./content/publication"
file.pattern = "\\.md$"
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
rfiles
f <- rfiles[1]
f
#find and replace
x <- readLines(f)
x
grepl("url_pdf", x)
any(grepl("url_pdf", x))
x
x[-length(x)]
y <- x[-length(x)]
y
x[!grepl("^doi:", x)]
x <- x[!grepl("^doi:", x)]
y <- x[-length(x)]
y
f
basename(dirname(f))
y <- c(y, paste0("url_pdf: ", basename(dirname(f)), ".pdf"), x[length(x)])
y
url_pdf
url_pdf <- paste0("url_pdf: ", basename(dirname(f)), ".pdf")
url_pdf
add.pdf <- function(path = "./content/publication", file.pattern = "\\.md$", rm.doi = TRUE){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
results <- NULL
for(f in rfiles){
#find and replace
x <- readLines(f)
if (rm.doi)
x <- x[!grepl("^doi:", x)]
if (!any(grepl("^url_pdf", x))){
url_pdf <- paste0("url_pdf: ", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
}
}
}
add.pdf <- function(path = "./content/publication", file.pattern = "\\.md$", rm.doi = TRUE){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
results <- NULL
for(f in rfiles){
#find and replace
x <- readLines(f)
if (rm.doi)
x <- x[!grepl("^doi:", x)]
if (!any(grepl("^url_pdf", x))){
url_pdf <- paste0("url_pdf: ", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
}
}
print(results)
}
y
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
results <- NULL
results[length(results) + 1] <- url_pdf
results
blogdown::serve_site()
x[length(x)]
url_pdf <- paste0("url_pdf: uploads/", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
y
add.pdf <- function(path = "./content/publication", file.pattern = "\\.md$", rm.doi = TRUE){
rfiles <- list.files(pattern = file.pattern, path = path, full.names = T, all.files = T, recursive = TRUE)
results <- NULL
for(f in rfiles){
#find and replace
x <- readLines(f)
if (rm.doi)
x <- x[!grepl("^doi:", x)]
if (!any(grepl("^url_pdf", x))){
url_pdf <- paste0("url_pdf: uploads/", basename(dirname(f)), ".pdf")
y <- x[-length(x)]
y <- c(y, url_pdf, x[length(x)])
cat(y, file = f, sep="\n")
results[length(results) + 1] <- url_pdf
}
}
print(results)
}
add.pdf()
blogdown::stop_server()
blogdown::serve_site()
rmarkdown::render(input = '~/Dropbox/R_package_testing/ohun/vignettes/ohun.Rmd', output_format = "html", output_dir = "./content/software")
rmarkdown::render(input = '~/Dropbox/R_package_testing/ohun/vignettes/ohun.Rmd', output_format = "html_document", output_dir = "./content/software")
opar <- getwd()
setwd("~/Dropbox/R_package_testing/ohun/vignettes/")
rmarkdown::render(input = 'ohun.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software")
setwd(opar)
setwd("~/Dropbox/R_package_testing/ohun/vignettes/")
rmarkdown::render(input = 'ohun.Rmd', output_format = "html_document")
blogdown::serve_site()
opar <- getwd()
setwd("/home/m/Dropbox/R_package_testing/ohun")
rmarkdown::render(input = 'README.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software", output_file = "ohun.html")
setwd(opar)
blogdown::serve_site()
opar <- getwd()
setwd("/home/m/Dropbox/R_package_testing/ohun")
rmarkdown::render(input = 'README.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software", output_file = "ohun.html")
setwd(opar)
getwd()
setwd("~/Dropbox/Websites/marce10.github.io")
path = "~/Dropbox/R_package_testing/ohun"
to = getwd()
from = "~/Dropbox/R_package_testing/ohun"
file.copy(from = file.path(from, "README.Rmd"), to = file.path(to, "ohun.Rmd"))
x <- readLines(file.path(from, "README.Rmd"))
x
grep("badges:", x)
grep("<!-- badges:", x)
badges <- grep("<!-- badges:", x)
min(badges):max(badges)
-(min(badges):max(badges))
x x[-(min(badges):max(badges))]
x <- x[-(min(badges):max(badges))]
x
from
getwd()
basename(from)
paste0("./content/software/", basename(from), "Rmd")
cat(x, file = paste0("./content/software/", basename(from), "Rmd"), sep="\n")
file_name <- paste0("./content/software/", basename(from), "Rmd")
file_name
file_name <- paste0("./content/software/", basename(from), ".Rmd")
file_name
cat(x, file = file_name, sep="\n")
render_readme <-function(x, from) {
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
file_name <- paste0("./content/software/", basename(from), ".Rmd")
cat(x, file = file_name, sep="\n")
# rmarkdown::render(input = 'README.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software", output_file = "ohun.html")
#
}
render_readme <-function(from) {
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
file_name <- paste0("./content/software/", basename(from), ".Rmd")
cat(x, file = file_name, sep="\n")
# rmarkdown::render(input = 'README.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software", output_file = "ohun.html")
#
}
render_readme(from = "~/Dropbox/R_package_testing/ohun")
Sys.Date()
date = Sys.Date()
render_readme <-function(from, date = Sys.Date()) {
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
file_name <- paste0("./content/software/", date, basename(from), ".Rmd")
cat(x, file = file_name, sep="\n")
# rmarkdown::render(input = 'README.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software", output_file = "ohun.html")
#
}
render_readme(from = "~/Dropbox/R_package_testing/ohun", date = "2022-12-19")
render_readme <-function(from, date = Sys.Date()) {
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
file_name <- paste0("./content/software/", date, "-", basename(from), ".Rmd")
cat(x, file = file_name, sep="\n")
# rmarkdown::render(input = 'README.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software", output_file = "ohun.html")
#
}
render_readme(from = "~/Dropbox/R_package_testing/ohun", date = "2022-12-19")
paste0("lastmod: '".date, "'")
paste0("lastmod: '", date, "'")
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
x
x
output_line <- grep("^output:", x)
output_line
x <- c(x[1:output_line], paste0("lastmod: '", date, "'"), x[(output_line +1):length(x)])
x
#find and replace
x <- readLines(f)
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
output_line
output_line <- grep("---", x)[2]
output_line
x <- c(x[1:output_line], paste0("lastmod: '", date, "'"), x[(output_line +1):length(x)])
x
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
output_line <- grep("---", x)[2] -1
x <- c(x[1:output_line], paste0("lastmod: '", date, "'"), x[(output_line +1):length(x)])
file_name <- paste0("./content/software/", date, "-", basename(from), ".Rmd")
x
file_name <- paste0("./content/software/", date, "-", basename(from), ".Rmd")
cat(x, file = file_name, sep="\n")
render_readme(from = "~/Dropbox/R_package_testing/ohun", date = "2022-12-19")
render_readme(from = "~/Dropbox/R_package_testing/warbleR", date = "2021-12-19")
render_readme(from = "~/Dropbox/R_package_testing/warbleR", date = "2021-12-20")
render_readme <-function(from, date = Sys.Date()) {
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
x <- x[-(min(badges):max(badges))]
output_line <- grep("---", x)[2] -1
x <- c(x[1:output_line], paste0("lastmod: '", date, "'"), x[(output_line +1):length(x)])
file_name <- paste0("./content/software/", date, "-", basename(from), ".Rmd")
cat(x, file = file_name, sep="\n")
# rmarkdown::render(input = 'README.Rmd', output_format = "html_document", output_dir = "~/Dropbox/Websites/marce10.github.io/content/software", output_file = "ohun.html")
#
}
render_readme(from = "~/Dropbox/R_package_testing/ohun", date = "2022-12-19")
render_readme(from = "~/Dropbox/R_package_testing/warbleR", date = "2021-12-20")
render_readme(from = "~/Dropbox/R_package_testing/Rraven", date = "2021-12-20")
render_readme(from = "~/Dropbox/R_package_testing/ohun", date = "2022-12-19")
render_readme(from = "~/Dropbox/R_package_testing/warbleR", date = "2022-12-09")
render_readme(from = "~/Dropbox/R_package_testing/Rraven", date = "2021-04-21")
render_readme(from = "~/Dropbox/R_package_testing/dynaSpec", date = "2021-03-10")
render_readme(from = "~/Dropbox/R_package_testing/ohun", date = "2022-12-19")
render_readme(from = "~/Dropbox/R_package_testing/warbleR", date = "2022-12-09")
render_readme(from = "~/Dropbox/R_package_testing/Rraven", date = "2021-04-21")
render_readme(from = "~/Dropbox/R_package_testing/dynaSpec", date = "2021-03-10")
render_readme(from = "~/Dropbox/R_package_testing/baRulho", date = "2022-03-01")
render_readme(from = "~/Dropbox/R_package_testing/PhenotypeSpace", date = "2023-04-29")
render_readme(from = "~/Dropbox/R_package_testing/brmsish", date = "2023-04-30")
render_readme(from = "~/Dropbox/R_package_testing/sketchy", date = "2023-04-28")
from = "~/Dropbox/R_package_testing/sketchy"
date = "2023-04-28"
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
badges
x
render_readme(from = "~/Dropbox/R_package_testing/ohun", date = "2022-12-19")
render_readme(from = "~/Dropbox/R_package_testing/warbleR", date = "2022-12-09")
render_readme(from = "~/Dropbox/R_package_testing/Rraven", date = "2021-04-21")
render_readme(from = "~/Dropbox/R_package_testing/dynaSpec", date = "2021-03-10")
render_readme(from = "~/Dropbox/R_package_testing/dynaSpec", date = "2021-03-10")
render_readme(from = "~/Dropbox/R_package_testing/baRulho", date = "2022-03-01")
render_readme(from = "~/Dropbox/R_package_testing/PhenotypeSpace", date = "2023-04-29")
render_readme(from = "~/Dropbox/R_package_testing/PhenotypeSpace", date = "2023-04-29")
render_readme(from = "~/Dropbox/R_package_testing/brmsish", date = "2023-04-30")
render_readme(from = "~/Dropbox/R_package_testing/sketchy", date = "2023-04-28")
from = "~/Dropbox/R_package_testing/sketchy"
date = "2023-04-28"
x <- readLines(file.path(from, "README.Rmd"))
# remove badges
badges <- grep("<!-- badges:", x)
badges
x <- x[-(min(badges):max(badges))]
output_line <- grep("---", x)[2] -1
x <- c(x[1:output_line], paste0("lastmod: '", date, "'"), x[(output_line +1):length(x)])
x
render_readme(from = "~/Dropbox/R_package_testing/sketchy", date = "2023-04-28")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
library(RCurl)
library(jsonlite)
source("https://raw.githubusercontent.com/maRce10/suwo/master/R/query_observation.R")
source("https://raw.githubusercontent.com/maRce10/suwo/master/R/internal_functions.R")
token <- "fpsEzHxWseufQ2WQkDGk8sWA81GiXs"
results <-  query_observation("phaethornis yaruqui", type = "still image")
nrow(results)
results
View(results)
library(RCurl)
library(jsonlite)
source("https://raw.githubusercontent.com/maRce10/suwo/master/R/query_observation.R")
source("https://raw.githubusercontent.com/maRce10/suwo/master/R/internal_functions.R")
results <-  query_observation("phaethornis yaruqui", type = "still image",token = "fpsEzHxWseufQ2WQkDGk8sWA81GiXs")
nrow(results)
source("https://raw.githubusercontent.com/maRce10/suwo/master/R/download_media.R")
download_media(results, path = "~/Downloads/delete/")
download_media(results, path = "~/Downloads/borrar/")
blogdown::serve_site()
